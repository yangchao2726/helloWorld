<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">
	<!-- 数据库配置应置于事务配置之前  否则方法的数据源切换无法实现 -->
	<bean name="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url_db1}" />
		<property name="username" value="${jdbc_username_db1}" />
		<property name="password" value="${jdbc_password_db1}" />
		<property name="initialSize" value="0" />		
		<property name="maxActive" value="20" />	
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="0" />		
		<property name="maxWait" value="60000" />
		
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
	</bean>

	<bean name="dataSource1" parent="baseDataSource">
		<property name="url" value="${jdbc_url_db1}" />
		<property name="username" value="${jdbc_username_db1}" />
		<property name="password" value="${jdbc_password_db1}" />
	</bean>
	
	<bean name="dataSource2" parent="baseDataSource">
		<property name="url" value="${jdbc_url_db2}" />
		<property name="username" value="${jdbc_username_db2}" />
		<property name="password" value="${jdbc_password_db2}" />
	</bean>
	
	<bean name="dataSource3" parent="baseDataSource">
		<property name="url" value="${jdbc_url_db3}" />
		<property name="username" value="${jdbc_username_db3}" />
		<property name="password" value="${jdbc_password_db3}" />
	</bean>
	
	<bean id="dynamicDataSource" class="com.bfec.dsdemo.dynamicds.support.DynamicDataSource">
		<property name="targetDataSources">
		<map key-type="java.lang.String">  
            <!-- 指定lookupKey和与之对应的数据源 -->  
            <entry key="dataSource1" value-ref="dataSource1"></entry>    
            <entry key="dataSource2" value-ref="dataSource2"></entry>    
            <entry key="dataSource3" value-ref="dataSource3"></entry>    
        </map>
		</property>
		<!-- 默认数据源 -->  
        <property name="defaultTargetDataSource" ref="dataSource1" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="mapperLocations" value="classpath:com/bfec/dsdemo/mapping/*.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bfec.dsdemo.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<aop:config>
		<aop:aspect ref="dataSourceSupport">
		    <!-- 拦截所有service方法 -->  
            <aop:pointcut id="dataSourcePointcut" expression="execution(* com.bfec.dsdemo.service..*Impl.*(..))"/>  
            <aop:before pointcut-ref="dataSourcePointcut" method="interceptMethod" />
		</aop:aspect>
	</aop:config>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />
			<!-- 对查找方法进行只读事务 -->
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="datagrid*" propagation="SUPPORTS" read-only="true" />
			<!-- 其它方法事务配置 -->
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!--开启自动代理功能 true使用CGLIB -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<bean id="dataSourceSupport" class="com.bfec.dsdemo.dynamicds.support.DataSourceSupport"></bean>
	<!--开启注解式事务扫描 要开启事务的service实现类中 加上@Transactional注解-->
	<!-- <tx:annotation-driven/> -->
	<aop:config>
		<!-- 未开启事务扫描时 需指定aop配置 声明那些类的哪些方法参与事务 -->
		<aop:pointcut id="transactionPointcut" expression="execution(* com.bfec.dsdemo.service..*Impl.*(..)) and !execution(* com.bfec.dsdemo.service.impl.no_trans..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>
	
</beans>